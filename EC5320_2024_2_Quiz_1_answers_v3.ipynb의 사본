{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1L-W3c2igsz3ij16VGTU_ozEj6JSAoUeI","timestamp":1728367400633}],"collapsed_sections":["eslVisHmUx9p","1E8ICwom7Sj_","78K7WP2E9r3R","n4cRrMUVNSZR","2GuovMsI0Tjv","P3C9k-X90suS"]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"markdown","source":["# Quiz 1: 연안 v.s 내륙 classify\n","\n","2024.10.2\n","\n","서강대 경제학과 양현주 (hyang@sogang.ac.kr)<br><br>"],"metadata":{"id":"pISy00d752zK"}},{"cell_type":"markdown","source":["# 1. Install and import libraries"],"metadata":{"id":"eslVisHmUx9p"}},{"cell_type":"code","source":["import fastai\n","print(fastai.__version__)\n","\n","from fastai.vision.all import *\n","#from fastai.text.all import *\n","#from fastai.collab import *\n","#from fastai.tabular.all import *\n","\n","from matplotlib.pyplot import imshow"],"metadata":{"id":"0cE-eacr5KKk"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from google.colab import files"],"metadata":{"id":"qgAV-x2ihmHS"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# 2. Upload images to Colab"],"metadata":{"id":"1E8ICwom7Sj_"}},{"cell_type":"code","source":["# set the name of the folder to download images\n","img_folder_nm = 'my_labels'\n","\n","# set the name of the zip file to be downloaded\n","img_zipfile_nm = 'my_labels.zip'"],"metadata":{"id":"rMNxb4IbiLkk"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["!ls"],"metadata":{"id":"bNY1Bbj_CvUn"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["%%capture\n","\n","!unzip {img_zipfile_nm} -d {img_folder_nm}"],"metadata":{"id":"AnWvdaPi8z7c"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["!ls {img_folder_nm}"],"metadata":{"id":"f_yzZbiACxaq"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# remove \"__MACOSX\" folder if files are compressed with a Mac\n","\n","import shutil\n","\n","# Path to the \"__MACOSX\" folder\n","macosx_dir = os.path.join(img_folder_nm, \"__MACOSX\")\n","\n","# Check if the folder exists and then remove it\n","if os.path.exists(macosx_dir):\n","    shutil.rmtree(macosx_dir)\n","    print(f'Deleted the folder: {macosx_dir}')\n","else:\n","    print(f'The folder {macosx_dir} does not exist')"],"metadata":{"id":"W77xePTN-MKX"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# 3. Prepare images"],"metadata":{"id":"78K7WP2E9r3R"}},{"cell_type":"code","source":["# location of images\n","path = Path(img_folder_nm)\n","\n","# get list of image files\n","file_names = get_image_files(path)\n","file_names"],"metadata":{"id":"qbnwZwtY9u-M"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# show an example image\n","\n","im = Image.open(file_names[0])\n","print(im.shape)\n","imshow(im)"],"metadata":{"id":"fo1CRRka_BsM"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# find corrupt images and unlink them\n","\n","corrupt_images = verify_images(file_names)\n","\n","corrupt_images.map(Path.unlink);\n","\n","corrupt_images"],"metadata":{"id":"LzpLmHbf9_f4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# data block settings\n","\n","image_size = 276\n","valid_set_share = 0.3\n","my_random_seed = 42\n","\n","my_dblock = DataBlock(\n","    blocks=(ImageBlock, CategoryBlock),\n","    get_items=get_image_files,\n","    splitter=RandomSplitter(valid_pct=valid_set_share, seed=my_random_seed),\n","    get_y=parent_label,\n","    item_tfms=Resize(image_size))"],"metadata":{"id":"2DwCHAue-vEI"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# prepare dataloaders\n","\n","my_batch_size = 32\n","\n","dls = my_dblock.dataloaders(path, batch_size=my_batch_size)"],"metadata":{"id":"-PDYne7c_vFH"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# show image examples\n","\n","dls.train.show_batch(max_n=10, nrows=2)"],"metadata":{"id":"vSpEepf6_9qc"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# 4. Train with Early stopping"],"metadata":{"id":"n4cRrMUVNSZR"}},{"cell_type":"code","source":["learn = vision_learner(dls, resnet34, metrics=accuracy).to_fp16() # resnet 18, 34, 50, 101, 152\n","learn.path = Path('./')\n","\n","learn.fine_tune(100, cbs=[EarlyStoppingCallback(monitor='accuracy', patience=10),SaveModelCallback(monitor='accuracy')])"],"metadata":{"id":"90kV6upPNTqe"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["learn.validate()"],"metadata":{"id":"ZjO_v3a5NcKB"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["interp = ClassificationInterpretation.from_learner(learn)\n","interp.plot_confusion_matrix(figsize=(7,7))"],"metadata":{"id":"nSsuJruLwm7A"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["interp.plot_confusion_matrix(normalize=True, cmap='Reds', figsize=(7,7))"],"metadata":{"id":"oH6GRWkYwouN"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#5. Load new images for predictions"],"metadata":{"id":"2GuovMsI0Tjv"}},{"cell_type":"code","source":["### download images for predictions\n","\n","# set the name of the folder to download images\n","test_folder_nm = 'test_30'\n","\n","# set the name of the zip file to be downloaded\n","test_zipfile_nm = 'test_30.zip'"],"metadata":{"id":"YzAunW6x0JyX"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["%%capture\n","!unzip {test_zipfile_nm} -d {test_folder_nm}"],"metadata":{"id":"mxCK6vvD0ivJ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# grab a list of images in the folder\n","\n","test_imgs_list = get_image_files(test_folder_nm)\n","test_imgs_list"],"metadata":{"id":"c7GaVVjX0nPL"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# 6. Generate Predictions"],"metadata":{"id":"P3C9k-X90suS"}},{"cell_type":"code","source":["# generate predictions for multiple images\n","\n","new_predictions = []\n","new_predictions_label_only = []\n","new_predictions_proba_only = []\n","\n","for each_img in test_imgs_list:\n","    \"\"\"\n","    img = PILImage.create(each_img)\n","    img_resized = img.resize((image_size, image_size))\n","    each_pred = learn.predict(img_resized)\n","    \"\"\"\n","    each_pred = learn.predict(each_img)\n","    new_predictions.append(each_pred)\n","    new_predictions_label_only.append(each_pred[0])"],"metadata":{"id":"ridCR62R0u4K"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["new_predictions_label_only"],"metadata":{"id":"1ojdfOdn06DL"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# create a table for predictions\n","\n","final_table = pd.DataFrame(zip(test_imgs_list, new_predictions_label_only), columns=['file_path', 'label'])\n","final_table"],"metadata":{"id":"C6cbniiw1AXL"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# export as an excel file\n","final_table.to_excel('final_table.xlsx', index=False)"],"metadata":{"id":"rrqjxQEX1HWk"},"execution_count":null,"outputs":[]}]}